<%- include("../partials/header.ejs") %>
<body>
    <%- include("../partials/navbar.ejs") %>
    <div class="container mt-5 mb-4">
        <br>
        <h1 class="mt-4 mb-3">Cadastrar Migrante</h1>
        
        <!-- Alerta para validação -->
        <div id="alert" class="alert alert-danger d-none" role="alert"></div>

        <form action="/admin/migrant/create" method="POST" novalidate onsubmit="return validateForm()">
            <input type="hidden" name="_method" value="POST">
            <% const fields = [
                { label: 'Nome Completo*', name: 'full_name', type: 'text', required: true },
                { label: 'Nome Social', name: 'social_name', type: 'text' },
                { label: 'Email*', name: 'email', type: 'email', required: true, pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$' },
                { label: 'Telefone*', name: 'phone', type: 'text', maxlength: '15', required: true, oninput: "formatPhone(this)" },
                { label: 'WhatsApp*', name: 'whatsapp', type: 'select', required: true },  // Alterado para 'select'
                { label: 'Tipo de Documento*', name: 'document_type', type: 'text', required: true },
                { label: 'Número do Documento*', name: 'document_identification', type: 'text', required: true },
                { label: 'Data de Nascimento*', name: 'date_birth', type: 'date', required: true },
                { label: 'Idioma Preferido*', name: 'preferred_language', type: 'text', required: true },
                { label: 'Data de Entrada no Brasil*', name: 'entry_date', type: 'date', required: true },
                { label: 'Razão de Imigração*', name: 'migrant_reason', type: 'text', required: true },
                { label: 'Gênero*', name: 'gender', type: 'text', required: true },
                { label: 'Nacionalidade*', name: 'nationality', type: 'text', required: true },
                { label: 'Estado Civil*', name: 'marital_status', type: 'text', required: true },
                { label: 'Escolaridade', name: 'education_level', type: 'text' },
                { label: 'Programas do Governo:', name: 'social_program_access', type: 'text' },
                { label: 'Status Migratório', name: 'status_migratory', type: 'text' },
            ]; %>

            <% fields.forEach(field => { %>
                <div class="form-group">
                    <label for="<%= field.name %>"><%= field.label %></label>
                    <% if (field.type === 'select') { %>
                        <select class="form-control" id="<%= field.name %>" name="<%= field.name %>" required>
                            <option value="" disabled selected>Selecione uma opção</option>
                            <option value="true">Sim</option>
                            <option value="false">Não</option>
                        </select>
                    <% } else { %>
                        <input 
                            type="<%= field.type %>"
                            class="form-control"
                            id="<%= field.name %>"
                            name="<%= field.name %>"
                            <% if (field.required) { %> required <% } %>
                            <% if (field.maxlength) { %> maxlength="<%= field.maxlength %>" <% } %>
                            placeholder="<%= field.label %>"
                            aria-required="<%= field.required ? 'true' : 'false' %>"
                            <% if (field.oninput) { %> oninput="<%= field.oninput %>" <% } %> 
                        />
                    <% } %>
                </div>
            <% }); %>

            <div class="form-group">
                <label for="is_pcd">PcD (Pessoa com Deficiência)*</label>
                <select class="form-control" id="is_pcd" name="is_pcd" required>
                    <option value="" disabled selected>Selecione uma opção</option>
                    <option value="true">Sim</option>
                    <option value="false">Não</option>
                </select>
            </div>
            <br>
            <hr>
            <h3 class="mt-5 mb-3">Endereço</h3>
            <div class="form-group">
                <label for="cep">CEP*</label>
                <input 
                    type="text" 
                    class="form-control" 
                    id="cep" 
                    name="cep" 
                    placeholder="Digite o CEP" 
                    aria-label="CEP" 
                    required
                >
            </div>
            <button type="button" id="btnBuscarEndereco" class="btn btn-primary mb-2">Buscar Endereço</button>
            <div class="form-group">
                <label for="street">Logradouro</label>
                <input type="text" class="form-control" id="street" name="street" placeholder="Logradouro" aria-label="Logradouro">
            </div>
            <div class="form-group">
                <label for="neighborhood">Bairro</label>
                <input type="text" class="form-control" id="neighborhood" name="neighborhood" placeholder="Bairro" aria-label="Bairro">
            </div>
            <div class="form-group">
                <label for="city">Cidade</label>
                <input type="text" class="form-control" id="city" name="city" placeholder="Cidade" aria-label="Cidade">
            </div>
            <div class="form-group">
                <label for="state">Estado</label>
                <input type="text" class="form-control" id="state" name="state" placeholder="Estado" aria-label="Estado">
            </div>
            <div class="form-group">
                <label for="numero">Número*</label>
                <input type="text" class="form-control" id="numero" name="numero" placeholder="Número" aria-label="Número" required>
            </div>
            <div class="form-group">
                <label for="complemento">Complemento (opcional)</label>
                <input type="text" class="form-control" id="complemento" name="complemento" placeholder="Complemento" aria-label="Complemento">
            </div>
            <div class="alert alert-warning" role="alert">
                Caso a busca pelo endereço não retorne resultados, preencha os campos acima manualmente.
            </div>
            
            <br>
            <hr>
            <h3 class="mt-5 mb-3">Senha</h3>
            <div class="form-group">
                <label for="password">Senha*</label>
                <input type="password" class="form-control" id="password" name="password" placeholder="Senha" required>
            </div>
            <div class="form-group">
                <label for="confirm_password">Confirme a Senha*</label>
                <input type="password" class="form-control" id="confirm_password" name="confirm_password" placeholder="Confirme a Senha" required>
            </div>
            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="terms" name="authorized" required>
                <label class="form-check-label" for="terms"> O migrante aceita os <a href="">Termos e Condições</a></label>
            </div>
            <button type="submit" class="btn btn-success">Cadastrar Migrante</button>
            <a href="/admin/migrants" class="btn btn-secondary">Cancelar</a>
        </form>
    </div>
    <script>
        function formatPhone(input) {
            const value = input.value.replace(/\D/g, '');
            const formattedValue = value.length > 10
                ? value.replace(/(\d{2})(\d{5})(\d{4})/, '($1) $2-$3')
                : value.replace(/(\d{2})(\d{4})(\d{4})/, '($1) $2-$3');
            input.value = formattedValue;
        }

        document.getElementById('btnBuscarEndereco').addEventListener('click', function() {
            const cep = document.getElementById('cep').value.replace(/\D/g, '');
            if (cep.length === 8) {
                fetch(`https://viacep.com.br/ws/${cep}/json/`)
                    .then(response => response.json())
                    .then(data => {
                        if (!data.erro) {
                            document.getElementById('street').value = data.logradouro;
                            document.getElementById('neighborhood').value = data.bairro;
                            document.getElementById('city').value = data.localidade;
                            document.getElementById('state').value = data.estado;
                        } else {
                            alert('CEP não encontrado. Por favor, verifique o número inserido.');
                        }
                    })  
                    .catch(error => {
                        console.error('Erro ao buscar endereço:', error);
                        alert('Erro ao buscar endereço. Tente novamente mais tarde.');
                    });
            } else {
                alert('Por favor, insira um CEP válido.');
            }
        });

    function validateForm() {
        const requiredFields = [
            'full_name',
            'email',
            'phone',
            'whatsapp',
            'document_type',
            'document_identification',
            'date_birth',
            'preferred_language',
            'entry_date',
            'migrant_reason',
            'gender',
            'nationality',
            'marital_status',
            'is_pcd',
            'cep',
            'numero',
            'password',
            'confirm_password'
        ];

        let isValid = true;
        let errorMessage = '';
        
        // Verifica se todos os campos obrigatórios estão preenchidos
        requiredFields.forEach(field => {
            const input = document.getElementById(field);
            if (input && !input.value.trim()) {
                isValid = false;
                errorMessage += `O campo "${input.previousElementSibling.innerText}" é obrigatório. Por favor, preencha-o.\n`;
            }
        });

        // Verifica se as senhas são iguais
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirm_password').value;

        if (password !== confirmPassword) {
            isValid = false;
            errorMessage += 'As senhas não coincidem. Por favor, verifique.\n';
        }

        // Verifica se o checkbox está marcado
        const checkbox = document.getElementById('terms'); // Altere para o ID correto
        if (!checkbox.checked) {
            isValid = false;
            errorMessage += 'O migrante deve aceitar os termos e condições.\n';
        }

        if (!isValid) {
            const alertBox = document.getElementById('alert');
            alertBox.classList.remove('d-none');
            alertBox.innerText = errorMessage;

            // Rola a página até o alerta
            alertBox.scrollIntoView({ behavior: 'smooth', block: 'start' });
            
            return false; // Não submeter o formulário
        }

        return true; // Submeter o formulário
    }
</script>

</body>
<%- include("../partials/footer.ejs") %>
